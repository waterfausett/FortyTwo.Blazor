@using CurrieTechnologies.Razor.SweetAlert2
@inject IJSRuntime JS
@inject SweetAlertService Swal
@inject NavigationManager Navigation

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(Program).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData">
                <Authorizing>
                    <SpinnerOverlay FullHeight="true"></SpinnerOverlay>
                </Authorizing>
                <NotAuthorized>
                    @if (!context.User.Identity.IsAuthenticated)
                    {
                        ShowLoginPrompt();
                    }
                    else
                    {
                        <!-- TODO: make this better -->
                        <p>
                            You are not authorized to access
                            this resource.
                        </p>
                    }
                </NotAuthorized>
            </AuthorizeRouteView>
        </Found>
        <NotFound>
            <!-- TODO: make this use a different layout etc. -->
            <LayoutView Layout="@typeof(MainLayout)">
                <p>Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    public async void ShowLoginPrompt()
    {
        await Swal.FireAsync(new SweetAlertOptions
        {
            Icon = SweetAlertIcon.Error,
            Title = "Who goes there?!",
            AllowOutsideClick = false,
            AllowEscapeKey = false,
            ConfirmButtonText = "Log in now",
            ShowLoaderOnConfirm = true,
            ShowClass = new SweetAlertShowClass { Popup = "swal2-show", Backdrop = "swal-logout-bg" },
            PreConfirm = new PreConfirmCallback(async () =>
            {
                Navigation.NavigateTo($"authentication/login?returnUrl={Uri.EscapeDataString(Navigation.Uri)}");
                await Task.Delay(TimeSpan.FromSeconds(10));
                return "false";
            })
        });
    }
}